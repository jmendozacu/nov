<?php
class Mage_Firstdataglobalgateway_Model_Firstdataglobalgateway extends Mage_Payment_Model_Method_Cc { const REQUEST_METHOD_CC = 'CC'; const REQUEST_METHOD_ECHECK = 'ECHECK'; const REQUEST_TYPE_AUTH_CAPTURE = 'AUTH_CAPTURE'; const REQUEST_TYPE_AUTH_ONLY = 'AUTH_ONLY'; const REQUEST_TYPE_CAPTURE_ONLY = 'CAPTURE_ONLY'; const REQUEST_TYPE_CREDIT = 'REFUND'; const REQUEST_TYPE_VOID = 'VOID'; const REQUEST_TYPE_PRIOR_AUTH_CAPTURE = 'PRIOR_AUTH_CAPTURE'; const ECHECK_ACCT_TYPE_CHECKING = 'CHECKING'; const ECHECK_ACCT_TYPE_BUSINESS = 'BUSINESSCHECKING'; const ECHECK_ACCT_TYPE_SAVINGS = 'SAVINGS'; const ECHECK_TRANS_TYPE_CCD = 'CCD'; const ECHECK_TRANS_TYPE_PPD = 'PPD'; const ECHECK_TRANS_TYPE_TEL = 'TEL'; const ECHECK_TRANS_TYPE_WEB = 'WEB'; const RESPONSE_DELIM_CHAR = ','; const RESPONSE_CODE_APPROVED = 1; const RESPONSE_CODE_DECLINED = 2; const RESPONSE_CODE_ERROR = 3; const RESPONSE_CODE_HELD = 4; protected $_code = 'firstdataglobalgateway'; protected $_isGateway = true; protected $_canAuthorize = true; protected $_canCapture = true; protected $_canCapturePartial = false; protected $_canRefund = true; protected $_canVoid = true; protected $_canUseInternal = true; protected $_canUseCheckout = true; protected $_canUseForMultishipping = true; protected $_canSaveCc = false; protected $_authorize = ''; function processInvoice($speea4b5, $spe178b6) { $sp9cef18 = $spe178b6->getOrder(); if (!$speea4b5->isCanceled()) { $speea4b5->sendEmail(); $sp9cef18->addStatusToHistory($sp9cef18->getStatus(), 'Invoice email sent', 'Invoice email sent'); } } public function authorize(Varien_Object $spe178b6, $sp05be51) { $sp87958f = false; if ($sp05be51 > 0) { $spe178b6->setAnetTransType(self::REQUEST_TYPE_AUTH_ONLY); $spe178b6->setAmount($sp05be51); $sp711c51 = $this->_buildRequest($spe178b6); $sp4af838 = $this->_postRequest($sp711c51); $spe178b6->setCcApproval($sp4af838->getApprovalCode())->setLastTransId($sp4af838->getTransactionId())->setCcTransId($sp4af838->getTransactionId())->setCcAvsStatus($sp4af838->getAvsResultCode())->setCcCidStatus($sp4af838->getCardCodeResponseCode()); $sp6cf99c = $sp4af838->getResponseReasonCode(); $sp8ea4cd = $sp4af838->getResponseReasonText(); switch ($sp4af838->getResponseCode()) { case self::RESPONSE_CODE_APPROVED: $spe178b6->setStatus(self::STATUS_APPROVED); if ($sp4af838->getTransactionId() != $spe178b6->getParentTransactionId()) { $spe178b6->setTransactionId($sp4af838->getTransactionId()); } $spe178b6->setIsTransactionClosed(0)->setTransactionAdditionalInfo('real_transaction_id', $sp4af838->getTransactionId()); if (!($sp9cef18 = $spe178b6->getOrder())) { $sp9cef18 = $spe178b6->getQuote(); } $sp9cef18->addStatusToHistory($sp9cef18->getStatus(), urldecode($sp4af838->getResponseReasonText()) . ' at FirstdataGlobalgateway, Trans ID: ' . $sp4af838->getTransactionId(), $sp4af838->getResponseReasonText() . ' from FirstdataGlobalgateway, Trans ID: ' . $sp4af838->getTransactionId()); break; case self::RESPONSE_CODE_DECLINED: $sp87958f = Mage::helper('paygate')->__('Payment authorization transaction has been declined. ' . "\n{$sp8ea4cd}"); break; default: $sp87958f = Mage::helper('paygate')->__('Payment authorization error. ' . "\n{$sp8ea4cd}"); break; } } else { $sp87958f = Mage::helper('paygate')->__('Invalid amount for authorization.'); } if ($sp87958f !== false) { Mage::throwException($sp87958f); } return $this; } public function capture(Varien_Object $spe178b6, $sp05be51) { $sp87958f = false; if ($spe178b6->getParentTransactionId()) { $spe178b6->setAnetTransType(self::REQUEST_TYPE_PRIOR_AUTH_CAPTURE); } else { $spe178b6->setAnetTransType(self::REQUEST_TYPE_AUTH_CAPTURE); } $spe178b6->setAmount($sp05be51); $sp711c51 = $this->_buildRequest($spe178b6); $sp4af838 = $this->_postRequest($sp711c51); if ($sp4af838->getResponseCode() == self::RESPONSE_CODE_APPROVED) { $spe178b6->setStatus(self::STATUS_APPROVED); $spe178b6->setCcTransId($sp4af838->getTransactionId()); $spe178b6->setLastTransId($sp4af838->getTransactionId()); if ($sp4af838->getTransactionId() != $spe178b6->getParentTransactionId()) { $spe178b6->setTransactionId($sp4af838->getTransactionId()); } $spe178b6->setIsTransactionClosed(0)->setTransactionAdditionalInfo('real_transaction_id', $sp4af838->getTransactionId()); if (!($sp9cef18 = $spe178b6->getOrder())) { $sp9cef18 = $spe178b6->getQuote(); } $sp9cef18->addStatusToHistory($sp9cef18->getStatus(), urldecode($sp4af838->getResponseReasonText()) . ' at FirstdataGlobalgateway, Trans ID: ' . $sp4af838->getTransactionId(), $sp4af838->getResponseReasonText() . ' from FirstdataGlobalgateway, Trans ID: ' . $sp4af838->getTransactionId()); } else { if ($sp4af838->getResponseReasonText()) { $sp87958f = $sp4af838->getResponseReasonText(); } else { $sp87958f = Mage::helper('paygate')->__('Error in capturing the payment'); } if (!($sp9cef18 = $spe178b6->getOrder())) { $sp9cef18 = $spe178b6->getQuote(); } $sp9cef18->addStatusToHistory($sp9cef18->getStatus(), urldecode($sp87958f) . ' at FirstdataGlobalgateway', $sp87958f . ' from FirstdataGlobalgateway'); } if ($sp87958f !== false) { Mage::throwException($sp87958f); } return $this; } public function canVoid(Varien_Object $spe178b6) { return $this->_canVoid; } public function void(Varien_Object $spe178b6) { $sp87958f = false; $sp58633e = $spe178b6->getVoidTransactionId(); if (empty($sp58633e)) { $sp58633e = $spe178b6->getParentTransactionId(); } $sp05be51 = $spe178b6->getAmount(); if ($sp05be51 <= 0) { $sp05be51 = $spe178b6->getAmountAuthorized(); $spe178b6->setAmount($spe178b6->getAmountAuthorized()); } if ($sp58633e && $sp05be51 > 0) { $spe178b6->setAnetTransType(self::REQUEST_TYPE_VOID); $sp711c51 = $this->_buildRequest($spe178b6); $sp4af838 = $this->_postRequest($sp711c51); if ($sp4af838->getResponseCode() == self::RESPONSE_CODE_APPROVED) { $spe178b6->setStatus(self::STATUS_VOID); if ($sp4af838->getTransactionId() != $spe178b6->getParentTransactionId()) { $spe178b6->setTransactionId($sp4af838->getTransactionId()); } $spe178b6->setIsTransactionClosed(1)->setShouldCloseParentTransaction(1)->setTransactionAdditionalInfo('real_transaction_id', $sp4af838->getTransactionId()); } else { $spf3b111 = $sp4af838->getResponseReasonText(); $sp87958f = true; } } else { if (!$sp58633e) { $spf3b111 = Mage::helper('paygate')->__('Error in voiding the payment. Transaction ID not found'); $sp87958f = true; } else { if ($sp05be51 <= 0) { $spf3b111 = Mage::helper('paygate')->__('Error in voiding the payment. Payment amount is 0'); $sp87958f = true; } else { $spf3b111 = Mage::helper('paygate')->__('Error in voiding the payment'); $sp87958f = true; } } } if ($sp87958f !== false) { Mage::throwException($spf3b111); } return $this; } public function canRefund() { return $this->_canRefund; } public function refund(Varien_Object $spe178b6, $sp05be51) { $sp87958f = false; $sp58633e = $spe178b6->getRefundTransactionId(); if (empty($sp58633e)) { $sp58633e = $spe178b6->getParentTransactionId(); } if (($this->getConfigData('test') && $sp58633e == 0 || $sp58633e) && $sp05be51 > 0) { $spe178b6->setAnetTransType(self::REQUEST_TYPE_CREDIT); $sp711c51 = $this->_buildRequest($spe178b6); $sp711c51->setXAmount($sp05be51); $sp4af838 = $this->_postRequest($sp711c51); if ($sp4af838->getResponseCode() == self::RESPONSE_CODE_APPROVED) { $spe178b6->setStatus(self::STATUS_SUCCESS); if ($sp4af838->getTransactionId() != $spe178b6->getParentTransactionId()) { $spe178b6->setTransactionId($sp4af838->getTransactionId()); } $spbec814 = $spe178b6->getOrder()->canCreditmemo() ? 0 : 1; $spe178b6->setIsTransactionClosed(1)->setShouldCloseParentTransaction($spbec814)->setTransactionAdditionalInfo('real_transaction_id', $sp4af838->getTransactionId()); } else { $spf3b111 = $sp4af838->getResponseReasonText(); $sp87958f = true; } } else { $spf3b111 = Mage::helper('paygate')->__('Error in refunding the payment'); $sp87958f = true; } if ($sp87958f !== false) { Mage::throwException($spf3b111); } return $this; } protected function _buildRequest(Varien_Object $spe178b6) { $sp9cef18 = $spe178b6->getOrder(); if (!$spe178b6->getAnetTransMethod()) { $spe178b6->setAnetTransMethod(self::REQUEST_METHOD_CC); } $sp711c51 = Mage::getModel('firstdataglobalgateway/firstdataglobalgateway_request')->setXVersion(3.1)->setXDelimData('True')->setXDelimChar(self::RESPONSE_DELIM_CHAR)->setXRelayResponse('False'); $sp711c51->setXTestRequest($this->getConfigData('test') ? 'TRUE' : 'FALSE'); $sp711c51->setXLogin($this->getConfigData('login'))->setXTranKey($this->getConfigData('trans_key'))->setXType($spe178b6->getAnetTransType())->setXMethod($spe178b6->getAnetTransMethod()); if ($spe178b6->getAmount()) { $sp711c51->setXAmount($spe178b6->getAmount(), 2); $sp711c51->setXCurrencyCode($sp9cef18->getBaseCurrencyCode()); } switch ($spe178b6->getAnetTransType()) { case self::REQUEST_TYPE_CREDIT: case self::REQUEST_TYPE_VOID: case self::REQUEST_TYPE_PRIOR_AUTH_CAPTURE: $sp711c51->setXTransId($spe178b6->getCcTransId()); $sp711c51->setXCardNum($spe178b6->getCcNumber())->setXExpDate(sprintf('%02d-%04d', $spe178b6->getCcExpMonth(), $spe178b6->getCcExpYear()))->setXCardCode($spe178b6->getCcCid())->setXCardName($spe178b6->getCcOwner()); break; case self::REQUEST_TYPE_CAPTURE_ONLY: $sp711c51->setXAuthCode($spe178b6->getCcAuthCode()); break; } if (!empty($sp9cef18)) { $sp28367a = $sp9cef18->getShippingAmount(); $sp7045b2 = $sp9cef18->getTaxAmount(); $spd5e7c1 = $sp9cef18->getSubtotal(); $sp711c51->setXInvoiceNum($sp9cef18->getIncrementId()); $spe785b3 = $sp9cef18->getBillingAddress(); if (!empty($spe785b3)) { $spab41b3 = $spe785b3->getEmail(); if (!$spab41b3) { $spab41b3 = $sp9cef18->getBillingAddress()->getEmail(); } if (!$spab41b3) { $spab41b3 = $sp9cef18->getCustomerEmail(); } $sp711c51->setXFirstName($spe785b3->getFirstname())->setXLastName($spe785b3->getLastname())->setXCompany($spe785b3->getCompany())->setXAddress($spe785b3->getStreet(1))->setXCity($spe785b3->getCity())->setXState($spe785b3->getRegion())->setXZip($spe785b3->getPostcode())->setXCountry($spe785b3->getCountry())->setXPhone($spe785b3->getTelephone())->setXFax($spe785b3->getFax())->setXCustId($spe785b3->getCustomerId())->setXCustomerIp($sp9cef18->getRemoteIp())->setXCustomerTaxId($spe785b3->getTaxId())->setXEmail($spab41b3)->setXEmailCustomer($this->getConfigData('email_customer'))->setXMerchantEmail($this->getConfigData('merchant_email')); } $sp6c3c80 = $sp9cef18->getShippingAddress(); if (!$sp6c3c80) { $sp6c3c80 = $spe785b3; } if (!empty($sp6c3c80)) { $sp711c51->setXShipToFirstName($sp6c3c80->getFirstname())->setXShipToLastName($sp6c3c80->getLastname())->setXShipToCompany($sp6c3c80->getCompany())->setXShipToAddress($sp6c3c80->getStreet(1))->setXShipToCity($sp6c3c80->getCity())->setXShipToState($sp6c3c80->getRegion())->setXShipToZip($sp6c3c80->getPostcode())->setXShipToCountry($sp6c3c80->getCountry()); if (!isset($sp28367a) || $sp28367a <= 0) { $sp28367a = $sp6c3c80->getShippingAmount(); } if (!isset($sp7045b2) || $sp7045b2 <= 0) { $sp7045b2 = $sp6c3c80->getTaxAmount(); } if (!isset($spd5e7c1) || $spd5e7c1 <= 0) { $spd5e7c1 = $sp6c3c80->getSubtotal(); } } $sp711c51->setXPoNum($spe178b6->getPoNumber())->setXTax($sp7045b2)->setXSubtotal($spd5e7c1)->setXFreight($sp28367a); } switch ($spe178b6->getAnetTransMethod()) { case self::REQUEST_METHOD_CC: if ($spe178b6->getCcNumber()) { $sp711c51->setXCardNum($spe178b6->getCcNumber())->setXExpDate(sprintf('%02d-%04d', $spe178b6->getCcExpMonth(), $spe178b6->getCcExpYear()))->setXCardCode($spe178b6->getCcCid())->setXCardName($spe178b6->getCcOwner()); } break; case self::REQUEST_METHOD_ECHECK: $sp711c51->setXBankAbaCode($spe178b6->getEcheckRoutingNumber())->setXBankName($spe178b6->getEcheckBankName())->setXBankAcctNum($spe178b6->getEcheckAccountNumber())->setXBankAcctType($spe178b6->getEcheckAccountType())->setXBankAcctName($spe178b6->getEcheckAccountName())->setXEcheckType($spe178b6->getEcheckType()); break; } return $sp711c51; } protected function _postRequest(Varien_Object $sp711c51) { $sp4af838 = Mage::getModel('firstdataglobalgateway/firstdataglobalgateway_result'); $spa427ea = $sp711c51->getData(); $sp80e290 = array(0 => '1', 1 => '1', 2 => '1', 3 => '(TESTMODE) This transaction has been approved.', 4 => '000000', 5 => 'P', 6 => '0', 7 => '100000018', 8 => '', 9 => '2704.99', 10 => 'CC', 11 => 'auth_only', 12 => '', 13 => 'Sreeprakash', 14 => 'N.', 15 => 'Schogini', 16 => 'XYZ', 17 => 'City', 18 => 'Idaho', 19 => '695038', 20 => 'US', 21 => '1234567890', 22 => '', 23 => '', 24 => 'Sreeprakash', 25 => 'N.', 26 => 'Schogini', 27 => 'XYZ', 28 => 'City', 29 => 'Idaho', 30 => '695038', 31 => 'US', 32 => '', 33 => '', 34 => '', 35 => '', 36 => '', 37 => '382065EC3B4C2F5CDC424A730393D2DF', 38 => '', 39 => '', 40 => '', 41 => '', 42 => '', 43 => '', 44 => '', 45 => '', 46 => '', 47 => '', 48 => '', 49 => '', 50 => '', 51 => '', 52 => '', 53 => '', 54 => '', 55 => '', 56 => '', 57 => '', 58 => '', 59 => '', 60 => '', 61 => '', 62 => '', 63 => '', 64 => '', 65 => '', 66 => '', 67 => ''); $sp80e290[7] = $spa427ea['x_invoice_num']; $sp80e290[8] = ''; $sp80e290[9] = $spa427ea['x_amount']; $sp80e290[10] = $spa427ea['x_method']; $sp80e290[11] = $spa427ea['x_type']; $sp80e290[12] = $spa427ea['x_cust_id']; $sp80e290[13] = $spa427ea['x_first_name']; $sp80e290[14] = $spa427ea['x_last_name']; $sp80e290[15] = $spa427ea['x_company']; $sp80e290[16] = $spa427ea['x_address']; $sp80e290[17] = $spa427ea['x_city']; $sp80e290[18] = $spa427ea['x_state']; $sp80e290[19] = $spa427ea['x_zip']; $sp80e290[20] = $spa427ea['x_country']; $sp80e290[21] = $spa427ea['x_phone']; $sp80e290[22] = $spa427ea['x_fax']; $sp80e290[23] = ''; $spa427ea['x_ship_to_first_name'] = !isset($spa427ea['x_ship_to_first_name']) ? $spa427ea['x_first_name'] : $spa427ea['x_ship_to_first_name']; $spa427ea['x_ship_to_first_name'] = !isset($spa427ea['x_ship_to_first_name']) ? $spa427ea['x_first_name'] : $spa427ea['x_ship_to_first_name']; $spa427ea['x_ship_to_last_name'] = !isset($spa427ea['x_ship_to_last_name']) ? $spa427ea['x_last_name'] : $spa427ea['x_ship_to_last_name']; $spa427ea['x_ship_to_company'] = !isset($spa427ea['x_ship_to_company']) ? $spa427ea['x_company'] : $spa427ea['x_ship_to_company']; $spa427ea['x_ship_to_address'] = !isset($spa427ea['x_ship_to_address']) ? $spa427ea['x_address'] : $spa427ea['x_ship_to_address']; $spa427ea['x_ship_to_city'] = !isset($spa427ea['x_ship_to_city']) ? $spa427ea['x_city'] : $spa427ea['x_ship_to_city']; $spa427ea['x_ship_to_state'] = !isset($spa427ea['x_ship_to_state']) ? $spa427ea['x_state'] : $spa427ea['x_ship_to_state']; $spa427ea['x_ship_to_zip'] = !isset($spa427ea['x_ship_to_zip']) ? $spa427ea['x_zip'] : $spa427ea['x_ship_to_zip']; $spa427ea['x_ship_to_country'] = !isset($spa427ea['x_ship_to_country']) ? $spa427ea['x_country'] : $spa427ea['x_ship_to_country']; $sp80e290[24] = $spa427ea['x_ship_to_first_name']; $sp80e290[25] = $spa427ea['x_ship_to_last_name']; $sp80e290[26] = $spa427ea['x_ship_to_company']; $sp80e290[27] = $spa427ea['x_ship_to_address']; $sp80e290[28] = $spa427ea['x_ship_to_city']; $sp80e290[29] = $spa427ea['x_ship_to_state']; $sp80e290[30] = $spa427ea['x_ship_to_zip']; $sp80e290[31] = $spa427ea['x_ship_to_country']; $sp80e290[0] = '1'; $sp80e290[1] = '1'; $sp80e290[2] = '1'; $sp80e290[3] = '(TESTMODE2) This transaction has been approved.'; $sp80e290[4] = '000000'; $sp80e290[5] = 'P'; $sp80e290[6] = '0'; $sp80e290[37] = '382065EC3B4C2F5CDC424A730393D2DF'; $sp80e290[39] = ''; $sp3d10af = $this->_linpointapi($spa427ea); $sp80e290[0] = $sp3d10af['response_code']; $sp80e290[1] = $sp3d10af['response_subcode']; $sp80e290[2] = $sp3d10af['response_reason_code']; $sp80e290[3] = $sp3d10af['response_reason_text']; $sp80e290[4] = $sp3d10af['approval_code']; $sp80e290[5] = $sp3d10af['avs_result_code']; $sp80e290[6] = $sp3d10af['transaction_id']; $sp80e290[37] = $sp3d10af['md5_hash']; $sp80e290[39] = $sp3d10af['card_code_response']; if ($sp80e290) { $sp4af838->setResponseCode((int) str_replace('"', '', $sp80e290[0])); $sp4af838->setResponseSubcode((int) str_replace('"', '', $sp80e290[1])); $sp4af838->setResponseReasonCode((int) str_replace('"', '', $sp80e290[2])); $sp4af838->setResponseReasonText($sp80e290[3]); $sp4af838->setApprovalCode($sp80e290[4]); $sp4af838->setAvsResultCode($sp80e290[5]); $sp4af838->setTransactionId($sp80e290[6]); $sp4af838->setInvoiceNumber($sp80e290[7]); $sp4af838->setDescription($sp80e290[8]); $sp4af838->setAmount($sp80e290[9]); $sp4af838->setMethod($sp80e290[10]); $sp4af838->setTransactionType($sp80e290[11]); $sp4af838->setCustomerId($sp80e290[12]); $sp4af838->setMd5Hash($sp80e290[37]); $sp4af838->setCardCodeResponseCode($sp80e290[39]); } else { Mage::throwException(Mage::helper('paygate')->__('Error in payment gateway')); } return $sp4af838; } function _linpointapi($spa427ea) { $sp9956d1 = Mage::helper('core')->decrypt($this->getConfigData('username')); $sp9f348d = $this->getConfigData('gatewayid'); $spd152a8 = Mage::helper('core')->decrypt($this->getConfigData('gatewaypass')); $spd6c2fb = $this->getConfigData('process_level3_data'); $spaebc9f = $this->getConfigData('process_soft_descriptor'); $spaff32c = $this->getConfigData('test'); $sp913831 = ''; $spf55f11 = ''; $sp7ff190 = array('Card_Number' => '', 'Expiry_Date' => '', 'CardHoldersName' => '', 'VerificationStr2' => ''); $sp05be51 = str_replace(',', '', number_format($spa427ea['x_amount'], 2)); $sp688542 = substr($spa427ea['x_exp_date'], 0, 2) . substr($spa427ea['x_exp_date'], -2); $sp5706fe = trim($spa427ea['x_address'] . ', ' . $spa427ea['x_city'] . ',' . $spa427ea['x_state'] . ',' . $spa427ea['x_country']); $spd2d85e = htmlentities(xmlentities(trim($spa427ea['x_first_name'] . ' ' . $spa427ea['x_last_name'])), ENT_QUOTES, 'UTF-8'); $sp49c5ba = htmlentities(xmlentities($sp5706fe), ENT_QUOTES, 'UTF-8'); $spceefbf = $spa427ea['x_zip']; $sp465206 = trim($spa427ea['x_first_name'] . ' ' . $spa427ea['x_last_name']); $sp79a6fb = trim($spa427ea['x_address']) . '|' . trim($spa427ea['x_zip']) . '|' . trim($spa427ea['x_city']) . '|' . trim($spa427ea['x_state']) . '|' . trim($spa427ea['x_country']); switch ($spa427ea['x_type']) { case 'AUTH_CAPTURE': $spf878f0 = '00'; $sp7ff190 = array('Card_Number' => $spa427ea['x_card_num'], 'Expiry_Date' => $sp688542, 'CardHoldersName' => $sp465206, 'VerificationStr2' => $spa427ea['x_card_code']); break; case 'CAPTURE_ONLY': case 'PRIOR_AUTH_CAPTURE': $spd6c2fb = false; $spf878f0 = '32'; list($sp913831, $spf55f11) = explode('|', $spa427ea['x_trans_id']); break; case 'VOID': $spd6c2fb = false; $spf878f0 = '33'; list($sp913831, $spf55f11) = explode('|', $spa427ea['x_trans_id']); break; case 'REFUND': $spd6c2fb = false; $spf878f0 = '34'; list($sp913831, $spf55f11) = explode('|', $spa427ea['x_trans_id']); break; case 'AUTH_ONLY': default: $spf878f0 = '01'; $sp7ff190 = array('Card_Number' => $spa427ea['x_card_num'], 'Expiry_Date' => $sp688542, 'CardHoldersName' => $sp465206, 'VerificationStr2' => $spa427ea['x_card_code']); } $sp7441e5 = array(); if ($spd6c2fb) { $sp171bde = $this->getConfigData('commodity_code'); $spc5cb7a = $this->getConfigData('unit_of_measure'); $sp1292a6 = array(); foreach ($spa427ea['x_line_items']['items'] as $spcb3595) { $sp1292a6[] = array('CommodityCode' => isset($spcb3595['commodity_code']) && !empty($spcb3595['commodity_code']) ? $spcb3595['commodity_code'] : $sp171bde, 'Description' => $spcb3595['item_name'], 'DiscountAmount' => $spcb3595['individual_discount'], 'DiscountIndicator' => 1, 'GrossNetIndicator' => 1, 'LineItemTotal' => $spcb3595['individual_total'], 'ProductCode' => $spcb3595['item_number'], 'Quantity' => $spcb3595['quantity'], 'TaxAmount' => $spcb3595['tax'], 'TaxRate' => number_format($spcb3595['tax'] * 100 / $spcb3595['base_price'], 2, '.', ''), 'TaxType' => 0, 'UnitCost' => $spcb3595['base_price'], 'UnitOfMeasure' => isset($spcb3595['unit_of_measure']) && !empty($spcb3595['unit_of_measure']) ? $spcb3595['unit_of_measure'] : $spc5cb7a); } $sp7441e5 = array('TaxAmount' => $spa427ea['x_line_items']['tax_amount'], 'DiscountAmount' => $spa427ea['x_line_items']['discount_amount'], 'DutyAmount' => '0.00', 'FreightAmount' => $spa427ea['x_line_items']['shipping_amount'], 'ShipToAddress' => array('Address1' => $spa427ea['x_ship_to_address'], 'City' => $spa427ea['x_ship_to_city'], 'State' => $spa427ea['x_ship_to_state'], 'Zip' => $spa427ea['x_ship_to_zip'], 'Country' => $spa427ea['x_ship_to_country'], 'CustomerNumber' => $spa427ea['x_invoice_num'], 'Email' => $spa427ea['x_email'], 'Name' => $spa427ea['x_ship_to_first_name'] . ' *' . $spa427ea['x_ship_to_last_name'], 'Phone' => $spa427ea['x_phone']), 'LineItem' => $sp1292a6); } $sp86f298 = array(); if ($spaebc9f) { $sp86f298 = array('DBAName' => $this->getConfigData('dbaname'), 'Street' => $this->getConfigData('street'), 'City' => $this->getConfigData('city'), 'Region' => $this->getConfigData('region'), 'PostalCode' => $this->getConfigData('postalcode'), 'CountryCode' => $this->getConfigData('countrycode'), 'MID' => $this->getConfigData('mid'), 'MCC' => $this->getConfigData('mcc'), 'MerchantContactInfo' => $this->getConfigData('merchantcontactinfo')); } if ($spaff32c) { $sp97d3db = 'https://api.demo.globalgatewaye4.firstdata.com/transaction/v11/wsdl'; } else { $sp97d3db = 'https://api.globalgatewaye4.firstdata.com/transaction/v11/wsdl'; } $sp6d4a02 = array_merge($sp7ff190, array('User_Name' => $sp9956d1, 'ExactID' => $sp9f348d, 'Password' => $spd152a8, 'Secure_AuthResult' => '', 'Ecommerce_Flag' => '0', 'XID' => '', 'CAVV' => '', 'CAVV_Algorithm' => '', 'Transaction_Type' => $spf878f0, 'Reference_No' => $spa427ea['x_invoice_num'], 'Customer_Ref' => '', 'Reference_3' => '', 'Client_IP' => $_SERVER['REMOTE_ADDR'], 'Client_Email' => $spa427ea['x_email'], 'Language' => 'en', 'Track1' => '', 'Track2' => '', 'Authorization_Num' => $sp913831, 'Transaction_Tag' => $spf55f11, 'DollarAmount' => $sp05be51, 'VerificationStr1' => $sp79a6fb, 'CVD_Presence_Ind' => '', 'Secure_AuthRequired' => '', 'Currency' => '', 'PartialRedemption' => '', 'ZipCode' => $spa427ea['x_zip'], 'Tax1Amount' => '', 'Tax1Number' => '', 'Tax2Amount' => '', 'Tax2Number' => '', 'SurchargeAmount' => '', 'PAN' => '')); if ($spd6c2fb) { $sp6d4a02['Level3'] = $sp7441e5; } if ($spaebc9f) { $sp6d4a02['SoftDescriptor'] = $sp86f298; } $sp5ee5f2 = ''; try { $sp3ca682 = array('Transaction' => $sp6d4a02); $sp094535 = new SoapClient($sp97d3db); $spd4c0fc = $sp094535->__soapCall('SendAndCommit', $sp3ca682); } catch (SoapFault $sp29b429) { $spe8eefb = ''; if ($sp29b429->faultcode == 'HTTP') { $spe8eefb = 'Invalid Credentials'; } else { $spe8eefb = '(' . $sp29b429->faultcode . ')' . $sp29b429->getMessage(); } $sp5ee5f2 = 'SOAP Fault: ' . $spe8eefb; Mage::throwException('SOAP Fault: ' . $spe8eefb); } catch (Exception $sp29b429) { $spe8eefb = $sp29b429->getMessage(); if (empty($spe8eefb)) { $spe8eefb = 'Unknown error'; } $sp5ee5f2 = 'SOAP Exception: ' . $spe8eefb; Mage::throwException('SOAP Exception: ' . $spe8eefb); } if (@$sp094535->fault) { $spf3b111 = $sp094535->faultstring . '(' . $sp094535->faultcode . ')'; Mage::throwException('Error: ' . $spf3b111); } $sp3d10af = array(); $sp3d10af['response_code'] = '1'; $sp3d10af['response_subcode'] = '1'; $sp3d10af['response_reason_code'] = '1'; $sp3d10af['response_reason_text'] = '(TESTMODE2) This transaction has been approved.'; $sp3d10af['approval_code'] = '000000'; $sp3d10af['avs_result_code'] = 'P'; $sp3d10af['transaction_id'] = '0'; $sp3d10af['md5_hash'] = '382065EC3B4C2F5CDC424A730393D2DF'; $sp3d10af['card_code_response'] = ''; if (!isset($spd4c0fc->Bank_Resp_code) && isset($spd4c0fc->Bank_Resp_Code)) { $spd4c0fc->Bank_Resp_code = $spd4c0fc->Bank_Resp_Code; } else { if (!isset($spd4c0fc->Bank_Resp_Code) && isset($spd4c0fc->Bank_Resp_code)) { $spd4c0fc->Bank_Resp_Code = $spd4c0fc->Bank_Resp_code; } } if ($spd4c0fc->Transaction_Approved == 1) { $sp3d10af['transaction_id'] = $spd4c0fc->Authorization_Num . '|' . $spd4c0fc->Transaction_Tag; $sp3d10af['approval_code'] = $spd4c0fc->SequenceNo; $sp3d10af['response_reason_text'] = $spd4c0fc->Bank_Message . '-' . $spd4c0fc->Bank_Resp_Code; if ($spd4c0fc->Bank_Resp_Code == '' || $spd4c0fc->Bank_Resp_Code == '000' || $spd4c0fc->Bank_Resp_Code == '00') { $sp3d10af['response_reason_text'] = $spd4c0fc->Exact_Message . '-' . $spd4c0fc->Exact_Resp_code; } $sp3d10af['avs_result_code'] = $spd4c0fc->AVS; $sp3d10af['response_reason_text'] .= '
Transaction ID: ' . $spd4c0fc->Authorization_Num; $sp3d10af['response_reason_text'] .= '
AVS Response: ' . $this->getAvsResponseText($spd4c0fc->AVS) . '[' . $spd4c0fc->AVS . ']'; $sp3d10af['response_reason_text'] .= '
CVV Response: ' . $this->getCvvResponseText($spd4c0fc->CVV2) . '[' . $spd4c0fc->CVV2 . ']'; $sp3d10af['response_code'] = '1'; $sp3d10af['response_subcode'] = '1'; $sp3d10af['response_reason_code'] = '1'; if ($spd4c0fc->AVS == '8' || $spd4c0fc->CVV2 == 'N') { $sp22ff5c = $this->getConfigData('merchant_email'); $spb1175a = 'Inv Num #' . $spa427ea['x_invoice_num'] . ': AVS or CCV failed'; $spe8eefb = $sp3d10af['response_reason_text'] . '
'; $spe8eefb .= 'AVS Code: ' . $spd4c0fc->AVS . '
'; $spe8eefb .= 'CVV Code: ' . $spd4c0fc->CVV2 . '
'; $spe8eefb .= 'Transaction ID: ' . $spd4c0fc->Authorization_Num . '
'; $spe8eefb .= 'Approval Code: ' . $sp3d10af['approval_code'] . '
'; $spe8eefb .= '
CUSTOMER INFO
'; $spe8eefb .= "\nName: {$spa427ea['x_first_name']}, {$spa427ea['x_last_name']}\nAddress: {$spa427ea['x_address']}\nCity: {$spa427ea['x_city']}\nState: {$spa427ea['x_state']}\nZip: {$spa427ea['x_zip']}\nCountry: {$spa427ea['x_country']}\nEmail:{$spa427ea['x_email']}\nPhone:{$spa427ea['x_phone']}\n"; } } else { $sp3d10af['response_code'] = '0'; $sp3d10af['response_subcode'] = '0'; $sp3d10af['response_reason_code'] = '0'; $sp3d10af['response_reason_text'] = $this->getResponseReason($spd4c0fc->Bank_Resp_Code); if ($spd4c0fc->Bank_Resp_Code == '' || $spd4c0fc->Bank_Resp_Code == '000' || $spd4c0fc->Bank_Resp_Code == '00') { $sp3d10af['response_reason_text'] = $this->getResponseReason($spd4c0fc->EXact_Resp_Code); } $sp3d10af['approval_code'] = '000000'; $sp3d10af['avs_result_code'] = 'P'; $sp3d10af['transaction_id'] = '0'; } return $sp3d10af; } function getResponseReason($sp6cf99c) { $sp6cf99c = trim($sp6cf99c); $sp069cfb = array('00' => 'Transaction Normal', '08' => 'CVV2/CID/CVC2 Data not verified', '22' => 'Invalid Credit Card Number', '25' => 'Invalid Expiry Date', '26' => 'Invalid Amount', '27' => 'Invalid Card Holder', '28' => 'Invalid Authorization No', '31' => 'Invalid Verification String', '32' => 'Invalid Transaction Code', '57' => 'Invalid Reference No', '58' => 'Invalid AVS String, The length of the AVS String has exceeded the max. 40 characters', '60' => 'Invalid Customer Reference Number', '63' => 'Invalid Duplicate', '64' => 'Invalid Refund', '68' => 'Restricted Card Number', '72' => 'Data within the transaction is incorrect', '93' => 'Invalid authorization number entered on a pre-auth completion', '11' => 'Invalid Sequence No', '12' => 'Message Timed-out at Host', '21' => 'BCE Function Error', '23' => 'Invalid Response from First Data', '30' => 'Invalid Date From Host', '10' => 'Invalid Transaction Description', '14' => 'Invalid Gateway ID', '15' => 'Invalid Transaction Number', '16' => 'Connection Inactive', '17' => 'Unmatched Transaction', '18' => 'Invalid Reversal Response', '19' => 'Unable to Send Socket Transaction', '20' => 'Unable to Write Transaction to File', '24' => 'Unable to Void Transaction', '40' => 'Unable to Connect', '41' => 'Unable to Send Logon', '42' => 'Unable to Send Trans', '43' => 'Invalid Logon', '52' => 'Terminal not Activated', '53' => 'Terminal/Gateway Mismatch', '54' => 'Invalid Processing Center', '55' => 'No Processors Available', '56' => 'Database Unavailable', '61' => 'Socket Error', '62' => 'Host not Ready', '44' => 'Address not Verified', '70' => 'Transaction Placed in Queue', '73' => 'Transaction Received from Bank', '76' => 'Reversal Pending', '77' => 'Reversal Complete', '79' => 'Reversal Sent to Bank', 'F1' => 'Address check failed - Fraud suspected', 'F2' => 'Card/Check Number check failed - Fraud suspected', 'F3' => 'Country Check Failed - Fraud Suspected', 'F4' => 'Customer Reference Check Failed - Fraud Suspected', 'F5' => 'Email Address check failed - Fraud suspected', 'F6' => 'IP Address check failed - Fraud suspected'); if (!isset($sp069cfb[$sp6cf99c]) || empty($sp069cfb[$sp6cf99c])) { $spe8eefb = 'Unknown reason'; } else { $spe8eefb = $sp069cfb[$sp6cf99c]; } return 'Unable to process order. Please check entered credit card information and try again or use a different payment method.
Processor response: (' . $sp6cf99c . ')'; } function getAvsResponseText($sp5bb97f) { $sp5bb97f = trim($sp5bb97f); $spe8eefb = 'Unrecognized response'; switch ($sp5bb97f) { case 'X': $spe8eefb = 'exact match, 9 digit zip'; break; case 'Y': $spe8eefb = 'exact match, 5 digit zip'; break; case 'A': $spe8eefb = 'address match only'; break; case 'W': $spe8eefb = '9 digit zip match only'; break; case 'Z': $spe8eefb = '5 digit zip match only'; break; case 'N': $spe8eefb = 'no address or zip match'; break; case 'U': $spe8eefb = 'address unavailable'; break; case 'G': $spe8eefb = 'non-North American issuer, does not participate'; break; case 'R': $spe8eefb = 'issuer system unavailable'; break; case 'E': $spe8eefb = 'not a Mail/Phone order'; break; case 'S': $spe8eefb = 'service not supported'; break; case 'Q': $spe8eefb = 'Bill to address did not pass edit checks'; break; case 'D': $spe8eefb = 'International street address and postal code match'; break; case 'B': $spe8eefb = 'International street address match, postal code not verified due to incompatable formats'; break; case 'C': $spe8eefb = 'International street address and postal code not verified due to incompatable formats'; break; case 'P': $spe8eefb = 'International postal code match, street address not verified due to incompatable format'; break; case '1': $spe8eefb = 'Cardholder name matches'; break; case '2': $spe8eefb = 'Cardholder name, billing address, and postal code match'; break; case '3': $spe8eefb = 'Cardholder name and billing postal code match'; break; case '4': $spe8eefb = 'Cardholder name and billing address match'; break; case '5': $spe8eefb = 'Cardholder name incorrect, billing address and postal code match'; break; case '6': $spe8eefb = 'Cardholder name incorrect, billing postal code matches'; break; case '7': $spe8eefb = 'Cardholder name incorrect, billing address matches'; break; case '8': $spe8eefb = 'Cardholder name, billing address, and postal code are all incorrect'; break; } return $spe8eefb; } function getCvvResponseText($sp6f4402) { $sp6f4402 = trim($sp6f4402); $spe8eefb = 'Unrecognized response'; switch ($sp6f4402) { case 'M': $spe8eefb = 'CVV2 / CVC2/CVD Match.'; break; case 'N': $spe8eefb = 'CVV2 / CVC2/CVD No Match.'; break; case 'P': $spe8eefb = 'Not Processed.'; break; case 'S': $spe8eefb = 'Merchant has indicated that CVV2 / CVC2/CVD is not present on the card.'; break; case 'U': $spe8eefb = 'Issuer is not certified and / or has not provided Visa encryption keys.'; break; } return $spe8eefb; } function logit($sp8df15d, $spd51302 = array()) { if (!isset($this->pth) || empty($this->pth)) { $sp539eeb = Mage::getConfig(); $this->pth = $sp539eeb->getBaseDir(); } $spc364f7 = $this->pth . '/magento_log.txt'; if (!$this->getConfigData('debug') || !$this->getConfigData('test')) { if (file_exists($spc364f7)) { $sp3bd57c = @fopen($spc364f7, 'w'); fclose($sp3bd57c); @unlink($spc364f7); } return; } if (!$this->getConfigData('test')) { return; } if (!is_writable($spc364f7)) { return; } $spaf2b14 = ''; if (count($spd51302) > 0) { $spaf2b14 = var_export($spd51302, true); } $sp5d6fdc = '<creditcard>
						<cardnumber>xxxxxxxxxxxxxxxx</cardnumber>
						<cardexpmonth>xx</cardexpmonth>
						<cardexpyear>xx</cardexpyear>
						<cvmvalue>xxx</cvmvalue>
						<cvmindicator>provided</cvmindicator>
					</creditcard>'; $spaf2b14 = preg_replace('/<creditcard>(.*)<\\/creditcard>/smUi', $sp5d6fdc, $spaf2b14); @file_put_contents($spc364f7, '----- Inside ' . $sp8df15d . ' =1= ' . date('d/M/Y H:i:s') . ' -----' . '
' . $spaf2b14, FILE_APPEND); } } if (!function_exists('xmlentities')) { function xmlentities($sp2ba94f) { $spd0f91b = 'A-Z0-9a-z\\s_-'; return preg_replace_callback("/[^{$spd0f91b}]/", 'get_xml_entity_at_index_0', $sp2ba94f); } function get_xml_entity_at_index_0($sp68da95) { if (!is_string($sp68da95[0]) || strlen($sp68da95[0]) > 1) { die("function: 'get_xml_entity_at_index_0' requires data type: 'char' (single character). '{$sp68da95[0]}' does not match this type."); } switch ($sp68da95[0]) { case '\'': case '"': case '&': case '<': case '>': return htmlspecialchars($sp68da95[0], ENT_QUOTES); break; default: return numeric_entity_4_char($sp68da95[0]); break; } } function numeric_entity_4_char($spa02c84) { return '&#' . str_pad(ord($spa02c84), 3, '0', STR_PAD_LEFT) . ';'; } }